@using System.Globalization
@using mvc_todolist.Commons
@using System.Text.Json
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Todolist</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/mvc_todolist.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    @{
        var cssFileName = ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower() + ".css";
    }
    @if (!string.IsNullOrEmpty(cssFileName))
    {
        <link rel="stylesheet" href="~/css/controllers/@cssFileName" />
    }
</head>
<body>
    <header class="header-app">
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">ToDolist</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark navigate-item" asp-area="" asp-controller="Home" asp-action="Index">@LabelsResource.HomeNav</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark navigate-item" asp-area="" asp-controller="Rookies" asp-action="Index">@LabelsResource.RookiesNav</a>
                        </li>
                    </ul>
                    <ul class="navbar-nav ms-auto d-flex align-items-center">
                        <li class="nav-item me-2">
                            <form asp-controller="Rookies" asp-action="SetLanguage" method="post" class="d-inline">
                                <select name="culture" onchange="this.form.submit()" class="form-select form-select-sm w-auto">
                                    <option value="en" selected="@(CultureInfo.CurrentCulture.Name.StartsWith("en"))">🇺🇸 @LabelsResource.EnglishLang</option>
                                    <option value="vi" selected="@(CultureInfo.CurrentCulture.Name.StartsWith("vi"))">🇻🇳 @LabelsResource.VietnameseLang</option>
                                </select>
                            </form>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-dark" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-person-circle" style="font-size: 1.5rem;"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" asp-controller="Account" asp-action="Login">@LabelsResource.LoginNav</a></li>
                                <li><a class="dropdown-item" asp-controller="Account" asp-action="Register">@LabelsResource.RegisterNav</a></li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <div class="toast-container position-fixed bottom-0 end-0 p-4" style="z-index: 1055;">
        <div id="universalToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header text-white">
                <strong id="toastTitle" class="me-auto"></strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="@LabelsResource.CloseTxt"></button>
            </div>
            <div class="toast-body text-white"></div>
        </div>
    </div>

    <footer class="border-top footer text-muted">
        <div>
            &copy; 2025 - todolist - paradev
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/util.js"></script>
    @await RenderSectionAsync("Scripts", required: false)

    @{
        var controllerScript = ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower() + ".js";
    }
    @if (!string.IsNullOrEmpty(controllerScript))
    {
        <script src="~/js/controllers/@controllerScript"></script>
    }

    <script>
        function showToast(message, type) {
            const toastEl = document.getElementById('universalToast');
            const toastHeader = toastEl.querySelector('.toast-header');
            const toastBody = toastEl.querySelector('.toast-body');
            const toastTitle = document.getElementById('toastTitle');

            toastHeader.classList.remove('bg-success', 'bg-danger', 'bg-warning', 'bg-info');
            toastBody.classList.remove('bg-success', 'bg-danger', 'bg-warning', 'bg-info');

            switch (type) {
                case 'success':
                    toastHeader.classList.add('bg-success');
                    toastBody.classList.add('bg-success');
                    toastTitle.textContent = 'Thành công!';
                    break;
                case 'error':
                    toastHeader.classList.add('bg-danger');
                    toastBody.classList.add('bg-danger');
                    toastTitle.textContent = 'Lỗi!';
                    break;
                default:
                    toastHeader.classList.add('bg-info');
                    toastBody.classList.add('bg-info');
                    toastTitle.textContent = 'Thông báo';
                    break;
            }

            toastBody.textContent = message;
            const toast = new bootstrap.Toast(toastEl, { delay: 3000 });
            toast.show();
        }
    </script>

    @{
        var messageResponse = TempData["message_response"];
        if (messageResponse != null)
        {
            var result = JsonSerializer.Deserialize<Result>(messageResponse?.ToString() ?? "");
            var type = result?.StatusCode >= 400 ? "error" : "message";
            <script>
                window.addEventListener('DOMContentLoaded', () => {
                    showToast("@result?.Detail", "@type");
                });
            </script>
        }
    }
</body>
</html>
